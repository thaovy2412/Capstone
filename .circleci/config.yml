version: 2.1
orbs:
  aws-eks: circleci/aws-eks@2.1
  kubernetes: circleci/kubernetes@1.2.0
jobs:


  hello-job:
    docker:
      - image: cimg/node:17.2.0 # the primary container, where your job's commands are run
    steps:
      - checkout # check out the code in the project directory
      - run: echo "hello world" # run the `echo` command


  lint:
    docker:
      - image: python:3.8.0
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: Install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
                chmod +x /bin/hadolint

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint


  build:
    docker:
      - image: cimg/python:3.11.4
    parameters:
      # cluster-name:
      #   description: |
      #     Name of the EKS cluster
      #   type: string
      #   default: "vy-truong-thao-fpt-number-one-capstone-cluster"
      aws-region:
        description: |
          AWS region
        type: string
        default: "us-east-1"
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run:
          name: Install dependencies
          command: |
            sudo apt install -y tar gzip curl
      - kubernetes/install-kubectl
# 
      # - run:
      #     name: Build docker container
      #     command: |
      #       docker build --tag=$DOCKER_IMAGE_NAME .
      #       docker image ls

      - run:
          name: Login and Push to Docker Hub 
          command: |
            docker login -u="$DOCKER_HUB_USERNAME" -p="$DOCKER_HUB_PASSWORD"
            # echo "Docker ID and Image: $DOCKER_IMAGE_NAME"
            # docker tag $DOCKER_IMAGE_NAME $DOCKER_HUB_USERNAME/$DOCKER_IMAGE_NAME:$CIRCLE_WORKFLOW_ID
            # docker push $DOCKER_HUB_USERNAME/$DOCKER_IMAGE_NAME:$CIRCLE_WORKFLOW_ID
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i caches/vy-truong-thao-fpt-number-one-capstone.tar | true
      - run:
          name: Build application Docker image
          command: docker build --cache-from=vy-truong-thao-fpt-number-one-capstone -t vy-truong-thao-fpt-number-one-capstone .
      - run:
          name: Save Docker image layer cache
          command: |
            chmod -R 777 ../
            mkdir -p caches
            docker save -o caches/vy-truong-thao-fpt-number-one-capstone.tar vy-truong-thao-fpt-number-one-capstone
      - run:
          name: Push Docker Image to DockerHub
          command: |
            docker tag vy-truong-thao-fpt-number-one-capstone ttv2412/vy-truong-thao-fpt-number-one-capstone
            docker push ttv2412/vy-truong-thao-fpt-number-one-capstone



  deploy:
    docker:
      - image: cimg/python:3.11.4
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
        default: "vy-truong-thao-fpt-number-one-capstone-cluster"
      aws-region:
        description: |
          AWS region
        type: string
        default: "us-east-1"
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run:
          name: Install dependencies
          command: |
            sudo apt install -y tar gzip curl
      - kubernetes/install-kubectl
      - run: |
          echo ${AWS_ACCESS_KEY_ID}
          echo $AWS_SECRET_ACCESS_KEY
          echo $DOCKER_HUB_PASSWORD
          echo $DOCKER_HUB_USERNAME 
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          aws-region: << parameters.aws-region >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          resource-file-path: ./k8s/deployment.yml
          resource-name: deployment/vy-truong-thao-fpt-number-one-capstone
          get-rollout-status: true
          show-kubectl-command: true
      - run:
          name: Test cluster
          command: |
            kubectl get nodes
            kubectl get deployment
            kubectl get pod -o wide
            kubectl get services
      - run:
          name: Cleaning up
          command: docker system prune


workflows:
  my-workflow:
    jobs:

      - hello-job

      - lint:
          requires:
            - "hello-job"

      - build:
          aws-region: $AWS_DEFAULT_REGION
          filters:
            branches:
              only:
                - main
          requires:
            - "lint"            

      # - aws-eks/create-cluster:
      #     cluster-name: vy-truong-thao-fpt-number-one-capstone-cluster
      #     requires:
      #       - "lint"
      #       - "build"

      - deploy:
          cluster-name: vy-truong-thao-fpt-number-one-capstone-cluster
          aws-region: $AWS_DEFAULT_REGION
          filters:
            branches:
              only:
                - main
          requires:
            - "lint"            
            - "build"
            # - "aws-eks/create-cluster"